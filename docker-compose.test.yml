version: '3.8'

services:
  # Test database
  test-postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: testdb
      POSTGRES_USER: testuser
      POSTGRES_PASSWORD: testpass
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U testuser"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Test Redis
  test-redis:
    image: redis:7-alpine
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  # Backend integration tests
  backend-tests:
    build:
      context: .
      dockerfile: Dockerfile
      target: build
    environment:
      NODE_ENV: test
      DATABASE_URL: postgres://testuser:testpass@test-postgres:5432/testdb
      REDIS_URL: redis://test-redis:6379
      JWT_SECRET: test-secret
    depends_on:
      test-postgres:
        condition: service_healthy
      test-redis:
        condition: service_healthy
    command: npm run test:integration
    volumes:
      - ./coverage:/app/coverage

  # End-to-end tests
  e2e-tests:
    build:
      context: .
      dockerfile: Dockerfile.e2e
    environment:
      BASE_URL: http://frontend:80
      API_URL: http://backend:3001
    depends_on:
      - backend
      - frontend
    command: npm run test:e2e
    volumes:
      - ./e2e-results:/app/results

  # Backend service for E2E tests
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      NODE_ENV: test
      DATABASE_URL: postgres://testuser:testpass@test-postgres:5432/testdb
      REDIS_URL: redis://test-redis:6379
      JWT_SECRET: test-secret
    depends_on:
      test-postgres:
        condition: service_healthy
      test-redis:
        condition: service_healthy
    ports:
      - "3001:3001"

  # Frontend service for E2E tests
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.client
    environment:
      REACT_APP_API_URL: http://backend:3001/api
    depends_on:
      - backend
    ports:
      - "80:80"
